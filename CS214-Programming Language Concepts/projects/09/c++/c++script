Script started on Thu 24 Apr 2014 09:52:17 AM EDT
jlm54@backus-naur:~/214/code/09/c++$ cat max.cpp mylist.cpp mylist.h
/* max.cpp finds the maximum value in a C++ linked list.
 *
 * Begun by: Dr. Adams, CS 214 at Calvin College.
 * Completed by:Joshua Maguire
 * Date:4/24/14
 */

#include <iostream>       // cin, cout, <<, >>
#include <algorithm>	  //for max_element
using namespace std;

#include "mylist.h"       // print()

int main() {
  list<int> list1, list2, list3, list4; //define list

  list1.push_back(99);    // 99, 88, 77, 66, 55
  list1.push_back(88);    // max is first
  list1.push_back(77);
  list1.push_back(66);  
  list1.push_back(55);

  list2.push_back(55);    // 55, 66, 77, 88, 99
  list2.push_back(66);    // max is last
  list2.push_back(77);  
  list2.push_back(88);   
  list2.push_back(99);  
  
  list3.push_back(55);    // 55, 77, 99, 88, 66
  list3.push_back(77);    // max is in the middle
  list3.push_back(99);  
  list3.push_back(88);  
  list3.push_back(66);  
  
  print(list1, cout); cout << endl;
  print(list2, cout); cout << endl;
  print(list3, cout); cout << endl;

  // display maxima of the 3 lists...
  cout << *max_element(list1.begin(), list1.end()) << endl;
  cout << *max_element(list2.begin(), list2.end()) << endl;
  cout << *max_element(list3.begin(), list3.end()) << endl;
  
  cout << "------------search tests---------------" << endl;
  //search test
  list4.push_back(55);    
  list4.push_back(77);
  list4.push_back(44);
  list4.push_back(88);  
  list4.push_back(66);

  cout << search(list1, 99) << endl;
  cout << search(list2, 99) << endl;
  cout << search(list3, 99) << endl;
  cout << search(list4, 99) << endl;
  
  cout << "all tests pasted!" << endl;

}

/* mylist.cpp defines functions that extend the STL list.
 *
 * Begun by: Dr. Adams, CS 214 at Calvin College.
 * Completed by:Joshua Maguire
 * Date:4/24/14
 */

#include <iostream>     // cout, <<
using namespace std;

#include "mylist.h"

/*********************************************
 * print() displays an STL list of integers. *
 * Receive: aList, a list of integers,       *
 *          out, an ostream.                 *
 * Output: the values in aList, to out.      *
 *********************************************/
   void print(const list<int> & aList, ostream & out)
   {
      list<int>::const_iterator it = aList.begin();
      while (it != aList.end())
      {
         out << *it << '\t';
         it++;
      }
   }
   
/*********************************************
 * search() searches a list for a specified  *
  int.										 *
 * Receive: aList, a list of integers,       *
 *     aValue, int being searched for        *
 * Output: position of found int, -1 if      *
 							  not found      *
 *********************************************/
   int search (const list<int> & aList, int aValue)
   {
      list<int>::const_iterator it = aList.begin();
      int position = 0;
      while (it != aList.end())
      {
         if (aValue == *it)
         {
         	return position;
         }
         it++;
         position ++;
      }
      return -1;
   }
    
/* mylist.h declares functions that extend the STL list.
 *
 * Begun by: Dr. Adams, CS 214 at Calvin College.
 * Completed by:Joshua Maguire
 * Date:4/24/14
 */

#include <list>           // list<>
using namespace std;

   void print(const list<int> & aList, ostream & out);
   int search(const list<int> & aList, int aValue);
jlm54@backus-naur:~/214/code/09/c++$ make
g++ -c -g -Wall max.cpp -o cppmax.o
g++ -c -g -Wall mylist.cpp
g++ cppmax.o mylist.o  -Wall -g -o cppMax
jlm54@backus-naur:~/214/code/09/c++$ make[K./cppMax 
99	88	77	66	55	
55	66	77	88	99	
55	77	99	88	66	
99
99
99
------------search tests---------------
0
4
2
-1
all tests pasted!
jlm54@backus-naur:~/214/code/09/c++$ exit

Script done on Thu 24 Apr 2014 09:52:39 AM EDT
