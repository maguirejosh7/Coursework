Script started on Thu 13 Mar 2014 07:46:11 PM EDT
jlm54@hollerith:~/214/projects/05/c++$ cat roots.cpp
/* roots.cpp computes the roots of a quadratic equation 
 *
 * Input: three terms of quadratic equation ( y = ax^2 + bx + c )
 * PRE: a > 0, (b^2 - 4ac) != negative
 * Output: x = root1, x = root2
 *
 * Begun by: Dr. Adams, for CS 214 at Calvin College.
 * Completed by:Joshua Maguire
 * Date:3/13/14
 **********************************************************************/


   #include <cmath>
   #include <iostream>
   using namespace std;

   bool quadraticRoots(double a, double b, double c,
                        double & root1, double & root2)
   {
      if (a != 0) {
         double arg = pow(b, 2.0) - 4 * a * c;//(b^2 - 4ac)
         if (arg >= 0) {
            root1 = (-b + sqrt(arg))/(2*a);//(-b + sqrt(arg))/2a
            root2 = (-b - sqrt(arg))/(2*a);//(-b - sqrt(arg))/2a
            return true;
         } else {
            cerr << "\n*** quadraticRoots(): b^2 - 4ac is negative!" << endl;
            root1 = root2 = 0.0;
            return false;
         }
      } else {
         cerr << "\n*** QuadraticRoots(): a is zero!" << endl;
         root1 = root2 = 0.0;
         return false;
      }
   }

int main() 
	{
	double rootA, rootB, rootC, root1, root2; //declare variables
	cout << "\nEnter terms for quadratic equation:";
	cin >> rootA >> rootB >> rootC;
	if (quadraticRoots(rootA, rootB, rootC, root1, root2))
	 {
		cout << "x = " << root1 << ", x = " << root2 << endl;
	 }
	}

	
jlm54@hollerith:~/214/projects/05/c++$ g++ roots.cpp -Wall -o roots.[K
jlm54@hollerith:~/214/projects/05/c++$ ./roots

Enter terms for quadratic equation:1 4 4
x = -2, x = -2
jlm54@hollerith:~/214/projects/05/c++$ ./roots

Enter terms for quadratic equation:1 5 6
x = -2, x = -3
jlm54@hollerith:~/214/projects/05/c++$ ./roots

Enter terms for quadratic equation:2 5 3
x = -1, x = -1.5
jlm54@hollerith:~/214/projects/05/c++$ ./roots

Enter terms for quadratic equation:0 2 2

*** QuadraticRoots(): a is zero!
jlm54@hollerith:~/214/projects/05/c++$ ./roots

Enter terms for quadratic equation:-2 -2 -2

*** quadraticRoots(): b^2 - 4ac is negative!
jlm54@hollerith:~/214/projects/05/c++$ exit

Script done on Thu 13 Mar 2014 07:47:00 PM EDT

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Script started on Thu 13 Mar 2014 08:18:00 PM EDT
jlm54@hollerith:~/214/projects/05/ada$ cat roots.adb
-- roots.cpp computes the roots of a quadratic equation 
--
-- Input: three terms of quadratic equation ( y = ax^2 + bx + c )
-- PRE: a > 0, (b^2 - 4ac) != negative
-- Output: x = root1, x = root2
--
-- Begun by: Dr. Adams, for CS 214 at Calvin College.
-- Completed by:Joshua Maguire
-- Date:3/13/14
------------------------------------------------------------------

with Ada.Text_IO, Ada.Float_Text_IO, Ada.Numerics.Elementary_Functions; 
use  Ada.Text_IO, Ada.Float_Text_IO, Ada.Numerics.Elementary_Functions;


procedure roots is
rootA, rootB, rootC, root1, root2, arg : Float;
	
-- quadraticRoots cmputes the roots of a quadratic equation
-- Input: three terms of quadratic equation ( y = ax^2 + bx + c )
-- PRE: a > 0, (b^2 - 4ac) != negative
-- Output: x = root1, x = root2
procedure quadraticRoots( a, b, c: in Float; root1, root2: in out float) is
begin
	if (a /= 0.0) then
	arg := b**2 - 4.0 * A * c;--b^2 - 4ac
		if(arg >= 0.0) then
		root1:= (-b + Sqrt(arg))/(2.0*a);--(-b + sqrt(arg))/2a
		root2:= (-b - Sqrt(arg))/(2.0*a);--(-b - sqrt(arg))/2a 
		return;
		else 
		Put("*** quadraticRoots(): b^2 - 4ac is negative!");
		root1 := 0.0; root2 := 0.0;
		return;
		end if;
	else 
	Put("\n*** QuadraticRoots(): a is zero!");
	root1 := 0.0; root2 := 0.0;
	return;
	end if;	
end quadraticRoots;
 

begin
	Put("Enter first term for quadratic equation:");Get(rootA);--get first root
	Put("Second:");Get(rootB);--second..
	Put("Third:");Get(rootC);--third..
	quadraticRoots(rootA,rootB,rootC,root1,root2);
	if (root1 /= 0.0 and root2 /= 0.0) then 
	Put("x = ");Put(root1);New_Line;Put("x = ");Put(root2);--Put result
	end if;
end roots;
jlm54@hollerith:~/214/projects/05/ada$ gnatmake roots.adb
gcc-4.6 -c roots.adb
roots.adb:48:42: warning: "root1" may be referenced before it has a value
roots.adb:48:48: warning: "root2" may be referenced before it has a value
gnatbind -x roots.ali
gnatlink roots.ali
jlm54@hollerith:~/214/projects/05/ada$ ./roots
Enter first term for quadratic equation:1
Second:4
Third:4
x = -2.00000E+00
x = -2.00000E+00
jlm54@hollerith:~/214/projects/05/ada$ ./roots
Enter first term for quadratic equation:1
Second:5
Third:6
x = -2.00000E+00
x = -3.00000E+00
jlm54@hollerith:~/214/projects/05/ada$ ./roots
Enter first term for quadratic equation:-1
Second:-1
Third:5
x = -2.79129E+00
x =  1.79129E+00
jlm54@hollerith:~/214/projects/05/ada$ ./roots
Enter first term for quadratic equation:2
Second:5
Third:3
x = -1.00000E+00
x = -1.50000E+00
jlm54@hollerith:~/214/projects/05/ada$ ./roots
Enter first term for quadratic equation:0
Second:2
Third:2
\n*** QuadraticRoots(): a is zero!
jlm54@hollerith:~/214/projects/05/ada$ ./roots
Enter first term for quadratic equation:-2
Second:-2
Third:-2
*** quadraticRoots(): b^2 - 4ac is negative!
jlm54@hollerith:~/214/projects/05/ada$ exit

Script done on Thu 13 Mar 2014 08:19:22 PM EDT

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

; roots.el computes the roots of a quadratic equation 
;
; Input: three terms of quadratic equation ( y = ax^2 + bx + c )
; PRE: a > 0, (b^2 - 4ac) != negative
; Output: x = root1, x = root2
;
; Begun by: Dr. Adams, for CS 214 at Calvin College.
; Completed by:Joshua Maguire
; Date:3/13/14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




(defun quadraticRoots (a b c)
;read description at top of file!!!
  (if (/= a 0); if a != 0
    (progn ;do next two lines
      (setq arg (- (expt b 2.0) (* 4 (* a c))))
      (if (>= arg 0.0) t) ;return true if arg is >= 0, else return nil
    )
  )
)
quadraticRoots


(defun main (rootA rootB rootC)
  (interactive "nEnter first term for quadratic equation: \nnSecond: \nnThird:")
  (if (quadraticRoots rootA rootB rootC)  ;if true,
    (progn                                ;do this. else, down to message
      (setq root1 (/ (+ (- 0 rootB) (sqrt arg)) (* 2 rootA)))
      (setq root2 (/ (- (- 0 rootB) (sqrt arg)) (* 2 rootA)))
      (message "x = %f, x = %f" root1 root2)
    )
    (message "rootA was 0 or the discriminant was less than 0!") ;;;else message..could do math here to check if was discriminant or 0 problem, but sort of redundant... also, if you didn't type 0 as rootA, then the problem must be with the discriminant being less than 0...
  )
)
main

(main 1 4 4)
"x = -2.000000, x = -2.000000"
(main 1 5 6)
"x = -2.000000, x = -3.000000"
(main 2 5 3)
"x = -1.000000, x = -1.500000"
(main 0 2 2)
"rootA was 0 or the discriminant was less than 0!"
(main -2 -2 -2)
"rootA was 0 or the discriminant was less than 0!"




; roots.el computes the roots of a quadratic equation 
;
; Input: three terms of quadratic equation ( y = ax^2 + bx + c )
; PRE: a > 0, (b^2 - 4ac) != negative
; Output: x = root1, x = root2
;
; Begun by: Dr. Adams, for CS 214 at Calvin College.
; Completed by:Joshua Maguire
; Date:3/13/14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




(defun quadraticRoots (a b c)
;read description at top of file!!!
  (if (/= a 0); if a != 0
    (progn ;do next two lines
      (setq arg (- (expt b 2.0) (* 4 (* a c))))
      (if (>= arg 0.0) t) ;return true if arg is >= 0, else return nil
    )
  )
)



(defun main (rootA rootB rootC)
  (interactive "nEnter first term for quadratic equation: \nnSecond: \nnThird:")
  (if (quadraticRoots rootA rootB rootC)  ;if true,
    (progn                                ;do this. else, down to message
      (setq root1 (/ (+ (- 0 rootB) (sqrt arg)) (* 2 rootA)))
      (setq root2 (/ (- (- 0 rootB) (sqrt arg)) (* 2 rootA)))
      (message "x = %f, x = %f" root1 root2)
    )
    (message "rootA was 0 or the discriminant was less than 0!") ;;;else message..could do math here to check if was discriminant or 0 problem, but sort of redundant... also, if you didn't type 0 as rootA, then the problem must be with the discriminant being less than 0...
  )
)




XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Script started on Thu 13 Mar 2014 08:58:32 PM EDT
jlm54@hollerith:~/214/projects/05/ruby$ cat roots.rb`[K
 # roots.rb computes the roots of a quadratic equation 
 #
 # Input: three terms of quadratic equation ( y = ax^2 + bx + c )
 # PRE: a > 0, (b^2 - 4ac) != negative
 # Output: x = root1, x = root2
 #
 # Begun by: Dr. Adams, for CS 214 at Calvin College.
 # Completed by:Joshua Maguire
 # Date:3/13/14
 ######################################################################/

#This method computes the roots of a quadratic equation. More at top of file...
def quadraticRoots(a, b, c)
	if a != 0.0
		arg = (b**2.0) - 4.0*a*c
		if arg >= 0.0
			root1= (-b + Math.sqrt(arg))/(2*a)#first root
			root2= (-b - Math.sqrt(arg))/(2*a)#second root
			print "x = #{root1}, x = #{root2}\n"#print roots
		else
			print "\n*** quadraticRoots(): b^2 - 4ac is negative!"#error
		end
	else
		print "\n*** QuadraticRoots(): a is zero!"#error
	end
end


if __FILE__ == $0
	print "\nEnter terms for quadratic equation: \n first term:"
		rootA = gets.chomp.to_f
	print "\nsecond term:"
		rootB = gets.chomp.to_f
	print "\nthird term:"
		rootC = gets.chomp.to_f
	quadraticRoots(rootA, rootB, rootC)
end
jlm54@hollerith:~/214/projects/05/ruby$ ruby roots.rb

Enter terms for quadratic equation: 
 first term:1

second term:4

third term:4
x = -2.0, x = -2.0
jlm54@hollerith:~/214/projects/05/ruby$ ruby roots.rb

Enter terms for quadratic equation: 
 first term:1

second term:5

third term:6
x = -2.0, x = -3.0
jlm54@hollerith:~/214/projects/05/ruby$ ruby roots.rb

Enter terms for quadratic equation: 
 first term:2

second term:5

third term:3
x = -1.0, x = -1.5
jlm54@hollerith:~/214/projects/05/ruby$ ruby roots.rb

Enter terms for quadratic equation: 
 first term:0

second term:3

third term:3

*** QuadraticRoots(): a is zero!jlm54@hollerith:~/214/projects/05/ruby$ ruby roots.rb

Enter terms for quadratic equation: 
 first term:-2

second term:-2

third term:-2

*** quadraticRoots(): b^2 - 4ac is negative!jlm54@hollerith:~/214/projects/05/ruby$ exit

Script done on Thu 13 Mar 2014 08:59:04 PM EDT
